[{"C:\\Users\\Carlos\\MERN-Frontend\\src\\index.tsx":"1","C:\\Users\\Carlos\\MERN-Frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Videos\\Prueba.tsx":"3","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Videos\\VideoList.tsx":"4","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Videos\\VideoForm.tsx":"5","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Items\\ItemList.tsx":"6","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Entry\\EntryDList.tsx":"7","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Sales\\SaleDList.tsx":"8","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Entry\\EntryList.tsx":"9","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Navigation\\Navbar.tsx":"10","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Sales\\SaleList.tsx":"11","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Entry\\EntryForm.tsx":"12","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Navigation\\Footer.tsx":"13","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Deposit\\DepositForm.tsx":"14","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Deposit\\DepositList.tsx":"15","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Sales\\SaleForm.tsx":"16","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Expenses\\ExpenseForm.tsx":"17","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Expenses\\ExpenseList.tsx":"18","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Items\\ItemForm.tsx":"19","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Report\\Dashboard.tsx":"20","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Items\\itemService.ts":"21","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Sales\\saleDetailService.ts":"22","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Sales\\saleService.ts":"23","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Expenses\\expenseService.ts":"24","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Deposit\\depositService.ts":"25","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Entry\\entryService.ts":"26","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Entry\\entryDetailService.ts":"27","C:\\Users\\Carlos\\MERN-Frontend\\src\\Router\\PublicRouter.tsx":"28","C:\\Users\\Carlos\\MERN-Frontend\\src\\Router\\PrivateRouter.tsx":"29","C:\\Users\\Carlos\\MERN-Frontend\\src\\context\\ContextSidebar.tsx":"30","C:\\Users\\Carlos\\MERN-Frontend\\src\\utils\\verifyToken.ts":"31","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Auth\\RememberPassword.tsx":"32","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Navigation\\SideBar.tsx":"33","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Auth\\UserList.tsx":"34","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Auth\\Auth.tsx":"35","C:\\Users\\Carlos\\MERN-Frontend\\src\\utils\\userJson.ts":"36","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Auth\\userService.ts":"37","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Role\\rolService.ts":"38","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Navigation\\SideBarData.tsx":"39","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Auth\\Register.tsx":"40","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Auth\\Login.tsx":"41","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Auth\\Principal.tsx":"42","C:\\Users\\Carlos\\MERN-Frontend\\src\\config.ts":"43","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Home\\UserView.tsx":"44"},{"size":2479,"mtime":1619659638234,"results":"45","hashOfConfig":"46"},{"size":440,"mtime":1616259493173,"results":"47","hashOfConfig":"46"},{"size":150,"mtime":1616259493126,"results":"48","hashOfConfig":"49"},{"size":231,"mtime":1616259493127,"results":"50","hashOfConfig":"49"},{"size":152,"mtime":1616259493127,"results":"51","hashOfConfig":"49"},{"size":4142,"mtime":1616259493110,"results":"52","hashOfConfig":"46"},{"size":4192,"mtime":1616259493097,"results":"53","hashOfConfig":"46"},{"size":4088,"mtime":1616259493120,"results":"54","hashOfConfig":"46"},{"size":3318,"mtime":1616259493101,"results":"55","hashOfConfig":"46"},{"size":2264,"mtime":1616259493113,"results":"56","hashOfConfig":"46"},{"size":3288,"mtime":1616259493122,"results":"57","hashOfConfig":"46"},{"size":14675,"mtime":1616259493100,"results":"58","hashOfConfig":"46"},{"size":457,"mtime":1616259493112,"results":"59","hashOfConfig":"46"},{"size":11190,"mtime":1616865675657,"results":"60","hashOfConfig":"46"},{"size":175,"mtime":1616259493094,"results":"61","hashOfConfig":"46"},{"size":15295,"mtime":1616259493121,"results":"62","hashOfConfig":"46"},{"size":3642,"mtime":1616259493106,"results":"63","hashOfConfig":"46"},{"size":3680,"mtime":1616259493107,"results":"64","hashOfConfig":"46"},{"size":5026,"mtime":1616259493110,"results":"65","hashOfConfig":"46"},{"size":8215,"mtime":1616259493119,"results":"66","hashOfConfig":"46"},{"size":632,"mtime":1616259493111,"results":"67","hashOfConfig":"46"},{"size":754,"mtime":1616259493125,"results":"68","hashOfConfig":"46"},{"size":624,"mtime":1616259493125,"results":"69","hashOfConfig":"46"},{"size":691,"mtime":1616259493108,"results":"70","hashOfConfig":"46"},{"size":690,"mtime":1616259493095,"results":"71","hashOfConfig":"46"},{"size":650,"mtime":1616259493103,"results":"72","hashOfConfig":"46"},{"size":776,"mtime":1616259493102,"results":"73","hashOfConfig":"46"},{"size":564,"mtime":1619573358142,"results":"74","hashOfConfig":"46"},{"size":2720,"mtime":1619651037844,"results":"75","hashOfConfig":"46"},{"size":330,"mtime":1619036593980,"results":"76","hashOfConfig":"46"},{"size":562,"mtime":1618412405285,"results":"77","hashOfConfig":"46"},{"size":121,"mtime":1619571926791,"results":"78","hashOfConfig":"46"},{"size":1638,"mtime":1619042167038,"results":"79","hashOfConfig":"46"},{"size":4768,"mtime":1619328201986,"results":"80","hashOfConfig":"46"},{"size":685,"mtime":1619658210794,"results":"81","hashOfConfig":"46"},{"size":488,"mtime":1619055680533,"results":"82","hashOfConfig":"46"},{"size":957,"mtime":1619208463967,"results":"83","hashOfConfig":"46"},{"size":320,"mtime":1619208517506,"results":"84","hashOfConfig":"46"},{"size":786,"mtime":1618444310474,"results":"85","hashOfConfig":"46"},{"size":8237,"mtime":1619651492534,"results":"86","hashOfConfig":"46"},{"size":4164,"mtime":1619573198560,"results":"87","hashOfConfig":"46"},{"size":834,"mtime":1619573293028,"results":"88","hashOfConfig":"46"},{"size":121,"mtime":1619326458654,"results":"89","hashOfConfig":"46"},{"size":1853,"mtime":1619572988767,"results":"90","hashOfConfig":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},"1n9w3gi",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ru5oqj",{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"94"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"94"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"94"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"94"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"94"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"94"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"94"},"C:\\Users\\Carlos\\MERN-Frontend\\src\\index.tsx",["199","200","201","202","203","204"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Prueba } from './components/Videos/Prueba';\r\nimport { VideoForm } from './components/Videos/VideoForm';\r\n\r\nimport 'bootswatch/dist/flatly/bootstrap.css';\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\nimport Navbar from \"./components/Navigation/Navbar\";\r\nimport Footer from \"./components/Navigation/Footer\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport PublicRouter from './Router/PublicRouter';\r\nimport { ContextSidebarProvider } from './context/ContextSidebar';\r\nimport PrivateRouter from './Router/PrivateRouter';\r\n\r\n\r\nReactDOM.render(\r\n  <>\r\n  <BrowserRouter>\r\n      {!window.localStorage.getItem(\"loggedGreenUser\") ? (\r\n        <PublicRouter/>\r\n      ) : (\r\n        <ContextSidebarProvider>\r\n          <PrivateRouter/>\r\n        </ContextSidebarProvider>\r\n        \r\n      )}\r\n      <ToastContainer />\r\n    </BrowserRouter>\r\n    {/*<BrowserRouter>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={VideoList} />\r\n        <Route path=\"/prueba\" component={Prueba} />\r\n        <Route path=\"/new-video\" component={VideoForm} />\r\n        <Route path=\"/new-item\" component={ItemForm} />\r\n        <Route path=\"/items\" component={ItemList} />\r\n        <Route path=\"/new-entry\" component={EntryForm} />\r\n        <Route path=\"/entries\" component={EntryList} />\r\n        <Route path=\"/new-sale\" component={SaleForm} />\r\n        <Route path=\"/sales\" component={Sales} />\r\n        <Route path=\"/saledetail/:invoice\" component={SaleDList} />\r\n        <Route path=\"/entrydetail/:invoice\" component={EntryDList} />\r\n        <Route path= \"/new-deposit\" component={DepositForm}/>\r\n        <Route path= \"/deposit\" component={DepositList}/>\r\n        <Route path= \"/dashboard\" component={Dashboard}/>\r\n        <Route path= \"/new-expense\" component={Expenses}/>\r\n        <Route path= \"/expenses\" component={ExpensesList}/>\r\n      </Switch>\r\n      <ToastContainer />\r\n    </BrowserRouter>\r\n    <Footer />*/}\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["205","206"],"C:\\Users\\Carlos\\MERN-Frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Videos\\Prueba.tsx",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Videos\\VideoList.tsx",["207"],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Videos\\VideoForm.tsx",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Items\\ItemList.tsx",["208"],"import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { Item } from \"./Item\";\r\nimport * as itemService from \"./itemService\";\r\nimport { BsTrash, BsPlusCircle } from 'react-icons/bs';\r\nimport { FiEdit, FiPlus } from 'react-icons/fi';\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ItemList = () => {\r\n  const history = useHistory();\r\n  const [items, setItems] = useState<Item[]>([]);\r\nconst [load, setLoad] = useState(true)\r\nconst [search, setSearch] = useState(\"\")\r\n  const loadItems = async () => {\r\n    const res = await itemService.getItems();\r\n    setItems(res.data);\r\n  };\r\n \r\n  const handleDelete = async (id:string) => {\r\n      if (window.confirm(\"¿Realmente desea eliminar este articulo?\")) {\r\n        await itemService.deleteItem(id)\r\n        toast.error(\"Articulo Eliminado correctamente\")\r\n          setLoad(!load)\r\n      }\r\n      \r\n  }\r\n  const handlerInputChange = (\r\n    e: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setSearch(e.target.value);\r\n    setLoad(!load)\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadItems();\r\n  }, [load]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\" row p-5\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className=\"form-group col-lg-1\">\r\n        \r\n        </div>\r\n        <div className=\"form-group col-lg-2\">\r\n        <label className=\"col-form-label\" htmlFor=\"inputDefault\">Buscar producto:  </label>\r\n        </div>\r\n         <div className=\"form-group col-lg-4\">\r\n        \r\n        <input type=\"text\" className=\"form-control\" placeholder=\"Ingresar nombre de producto\" id=\"inputDefault\" onChange={handlerInputChange}/>\r\n      </div>\r\n      <div className=\"form-group col-lg-2\"></div>\r\n      <br/>\r\n      <div className=\"form-group col-lg-3\">\r\n        <button type=\"button\" onClick={()=>history.push(\"/new-item\")} className=\"btn btn-primary\" >Nuevo Producto <FiPlus/> </button>\r\n      </div>\r\n      <br/>\r\n        <div className=\"card border-primary mb-3\" style={{ width: 1000 }}>\r\n          <div className=\"card-header\">Inventario</div>\r\n          <div className=\"card-body\">\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Producto</th>\r\n                  <th scope=\"col\">Descripción</th>\r\n                  <th scope=\"col\">Tipo</th>\r\n                  <th scope=\"col\">Cant</th>\r\n                  <th scope=\"col\">Precio Compra</th>\r\n                  <th scope=\"col\">Precio Sugerido</th>\r\n                  <th scope=\"col\">... Opciones... </th>\r\n                </tr>\r\n              </thead>\r\n              {items.map((item, index) => {\r\n                if (!item.name.indexOf(search)) {\r\n                  return (\r\n                    <tbody>\r\n                      <tr>\r\n                        <th scope=\"row\">{index+1}</th>\r\n                        <td>{item.name}</td>\r\n                        <td>{item.description}</td>\r\n                        <td>{item.kind}</td>\r\n                        <td>{item.stock}</td>\r\n                        <td>${item.price}</td>\r\n                        <td>${item.price + (item.price*0.3)}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-warning btn-sm\" style={{marginRight: 5}}> <FiEdit style={{color: \"#fff\"}}/></button> \r\n                        <button onClick={()=>item._id && handleDelete(item._id)} style={{marginRight: 5}} className=\"btn btn-danger btn-sm\"> <BsTrash/></button>\r\n                        <button onClick={()=>history.push(`/new-entry/${item._id}`)} style={{marginRight: 5}} className=\"btn btn-info btn-sm\"> <BsPlusCircle/></button>\r\n                          </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                }\r\n                  \r\n                \r\n              })}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemList;\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Entry\\EntryDList.tsx",["209","210","211"],"import React, { useEffect, useState } from \"react\";\r\nimport { Entry } from \"./Entry\";\r\nimport { EntryDetail } from \"./EntryDetail\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport * as entryService from \"../Entry/entryService\";\r\nimport * as entryDetailService from \"../Entry/entryDetailService\";\r\nimport logo from './logoFH.png'\r\n\r\n\r\nfunction EntryDList() {\r\n  interface Params {\r\n    invoice?: string;\r\n  }\r\n\r\n  const params = useParams<Params>();\r\n  const [entries, setEntries] = useState<Entry[]>([]);\r\n  const [entryD, setEntryD] = useState<EntryDetail>();\r\n  const loadItems = async () => {\r\n    const res = await entryService.getEntries();\r\n    setEntries(res.data);\r\n  };\r\n  const loadItems2 = async () => {\r\n    const res = await entryDetailService.getEntryDetail( `${params.invoice}`);\r\n    setEntryD(res.data);\r\n  };\r\n  useEffect(() => {\r\n    loadItems();\r\n    loadItems2();\r\n  }, []);\r\n  let n = 0;\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\" row p-5\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className=\"card border-primary mb-3\" style={{ width: 1000 }}>\r\n          <br />\r\n          <div\r\n            className=\" form-group row col-lg-12\"\r\n            style={{ alignItems: \"center\", textAlign: \"center\" }}\r\n          >\r\n            <div className=\" form-group col-lg-3\">\r\n              <img src={logo} style={{width: \"100%\"}}/>\r\n            </div>\r\n            <div className=\" form-group col-lg-6\">\r\n              <h4>Ferreteria Habitat.</h4>\r\n              <h6>NIT 999.999.999</h6>\r\n              <h6>Calle 2 N 6-62 La Florida Cel: 3124047140 - 3123382501</h6>\r\n              <h6>Fusagasuga - Colombia</h6>\r\n            </div>\r\n            <div className=\" form-group col-lg-3\">\r\n              <h4>Detalle de Compra:</h4>\r\n              <h5>Remisión N° {entryD?.invoice}</h5>\r\n            </div>\r\n          </div>\r\n          <hr style={{ height: 3, backgroundColor: \"#18bc9c\" }} />\r\n\r\n          <div className=\"card-body\">\r\n            <table className=\"table table-hover\">\r\n              <thead>\r\n                <tr className=\"table-success\">\r\n                  <th scope=\"row\">Cliente: </th>\r\n                  <td>{entryD?.provider}</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <th scope=\"row\">Fecha: </th>\r\n                  <td>{entryD?.date}</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n\r\n            <table className=\"table\">\r\n              <thead className=\"table table-active\">\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Producto</th>\r\n                  <th scope=\"col\">Cantidad</th>\r\n                  <th scope=\"col\">Vr. Unitario</th>\r\n                  <th scope=\"col\">Vr. Total</th>\r\n                </tr>\r\n              </thead>\r\n              {entries.map((item, index) => {\r\n                  \r\n                if (item.detailId === params.invoice) {\r\n                  \r\n                  n= n+1;\r\n                  return (\r\n                    <tbody key={index}>\r\n                      <tr>\r\n                        <td>{n}</td>\r\n                        <td> {item.productName} </td>\r\n                        <td>{item.amount}</td>\r\n                        <td>$ {item.newPrice}</td>\r\n                        <td>$ {item.newPrice * item.amount}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                }\r\n              })}\r\n              <tbody>\r\n                      <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td  className=\"table-active\">Total</td>\r\n                        <td  className=\"table-active\">${entryD?.totalEntry}</td>\r\n                      </tr>\r\n                    </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EntryDList;\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Sales\\SaleDList.tsx",["212","213","214"],"import React, { useEffect, useState } from \"react\";\r\nimport { Sale } from \"./Sale\";\r\nimport { SaleDetail } from \"./SaleDetail\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport * as saleService from \"../Sales/saleService\";\r\nimport * as saleDetailService from \"../Sales/saleDetailService\";\r\nimport logo from './logoFH.png'\r\n\r\n\r\nfunction SaleDList() {\r\n  interface Params {\r\n    invoice?: string;\r\n  }\r\n\r\n  const params = useParams<Params>();\r\n  const [sales, setSales] = useState<Sale[]>([]);\r\n  const [saleD, setSaleD] = useState<SaleDetail>();\r\n  const loadItems = async () => {\r\n    const res = await saleService.getSales();\r\n    setSales(res.data);\r\n  };\r\n  const loadItems2 = async () => {\r\n    const res = await saleDetailService.getSaleDetail(`${params.invoice}`);\r\n    setSaleD(res.data);\r\n  };\r\n  useEffect(() => {\r\n    loadItems();\r\n    loadItems2();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\" row p-5\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className=\"card border-primary mb-3\" style={{ width: 1000 }}>\r\n          <br />\r\n          <div\r\n            className=\" form-group row col-lg-12\"\r\n            style={{ alignItems: \"center\", textAlign: \"center\" }}\r\n          >\r\n            <div className=\" form-group col-lg-3\">\r\n              <img src={logo} style={{width: \"100%\"}}/>\r\n            </div>\r\n            <div className=\" form-group col-lg-6\">\r\n              <h4>Ferreteria Habitat S.A.S.</h4>\r\n              <h6>NIT 999.999.999</h6>\r\n              <h6>Calle 2 N 6-62 La Florida Cel: 3124047140 - 3123382501</h6>\r\n              <h6>Fusagasuga - Colombia</h6>\r\n            </div>\r\n            <div className=\" form-group col-lg-3\">\r\n              <h4>Detalle de venta:</h4>\r\n              <h5>factura N° {params.invoice}</h5>\r\n            </div>\r\n          </div>\r\n          <hr style={{ height: 3, backgroundColor: \"#18bc9c\" }} />\r\n\r\n          <div className=\"card-body\">\r\n            <table className=\"table table-hover\">\r\n              <thead>\r\n                <tr className=\"table-success\">\r\n                  <th scope=\"row\">Cliente: </th>\r\n                  <td>{saleD?.client}</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <th scope=\"row\">Fecha: </th>\r\n                  <td>{saleD?.date}</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n              </thead>\r\n            </table>\r\n\r\n            <table className=\"table\">\r\n              <thead className=\"table table-active\">\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Producto</th>\r\n                  <th scope=\"col\">Cantidad</th>\r\n                  <th scope=\"col\">Vr. Unitario</th>\r\n                  <th scope=\"col\">Vr. Total</th>\r\n                </tr>\r\n              </thead>\r\n              {sales.map((item, index) => {\r\n                if (item.detailId === params.invoice) {\r\n                  return (\r\n                    <tbody key={index}>\r\n                      <tr>\r\n                        <td>{index + 1}</td>\r\n                        <td> {item.productName} </td>\r\n                        <td>{item.amount}</td>\r\n                        <td>$ {item.priceSale}</td>\r\n                        <td>$ {item.priceSale * item.amount}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                }\r\n              })}\r\n              <tbody>\r\n                      <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td  className=\"table-active\">Total</td>\r\n                        <td  className=\"table-active\">${saleD?.totalSale}</td>\r\n                      </tr>\r\n                    </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SaleDList;\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Entry\\EntryList.tsx",["215"],"import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { EntryDetail } from \"./EntryDetail\";\r\nimport * as EntryDetailService from \"./entryDetailService\";\r\nimport { BsEyeFill } from 'react-icons/bs';\r\nimport { FiPlus } from 'react-icons/fi';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst EntryList = () => {\r\n    const history = useHistory();\r\n  const [entryDetail, setEntryDetail] = useState<EntryDetail[]>([]);\r\nconst [load, setLoad] = useState(true)\r\nconst [search, setSearch] = useState(\"\")\r\n  const loadItems = async () => {\r\n    const res = await EntryDetailService.getEntryDetails();\r\n    setEntryDetail(res.data);\r\n  };\r\n \r\n  const handlerInputChange = (\r\n    e: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setSearch(e.target.value);\r\n    setLoad(!load)\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadItems();\r\n  }, [load]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\" row p-5\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className=\"form-group col-lg-1\">\r\n        \r\n        </div>\r\n        <div className=\"form-group col-lg-2\">\r\n        <label className=\"col-form-label\" htmlFor=\"inputDefault\">Buscar Remisión:  </label>\r\n        </div>\r\n         <div className=\"form-group col-lg-4\">\r\n        \r\n        <input type=\"text\" className=\"form-control\" placeholder=\"Ingresar nombre de proveedor\" id=\"inputDefault\" onChange={handlerInputChange}/>\r\n      </div>\r\n      <div className=\"form-group col-lg-2\"></div>\r\n      <br/>\r\n      <div className=\"form-group col-lg-3\">\r\n        <button type=\"button\" onClick={()=>history.push(\"/new-entry\")} className=\"btn btn-primary\" >Nueva Entrada <FiPlus/> </button>\r\n      </div>\r\n      <br/>\r\n        <div className=\"card border-primary mb-3\" style={{ width: 1000 }}>\r\n          <div className=\"card-header\">Entradas</div>\r\n          <div className=\"card-body\">\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">N° Fact</th>\r\n                  <th scope=\"col\">Proveedor</th>\r\n                  <th scope=\"col\">Fecha</th>\r\n                  <th scope=\"col\">Total </th>\r\n                  <th scope=\"col\">... Opciones... </th>\r\n                </tr>\r\n              </thead>\r\n              {entryDetail.map((item, index) => {\r\n                if (!item.provider.indexOf(search)) {\r\n                  return (\r\n                    <tbody key={index}>\r\n                      <tr>\r\n                        <td>{item.invoice}</td>\r\n                        <td>{item.provider}</td>\r\n                        <td>{item.date}</td>\r\n                        <td>${item.totalEntry}</td>\r\n                        <td>\r\n                        <button onClick={()=>history.push(`/entrydetail/${item.detailId}`)} style={{marginRight: 5}} className=\"btn btn-primary btn-sm\"> <BsEyeFill style={{color: \"white\"}} /></button>\r\n                          </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                }\r\n                  \r\n                \r\n              })}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EntryList\r\n\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Navigation\\Navbar.tsx",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Sales\\SaleList.tsx",["216"],"import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { SaleDetail } from \"./SaleDetail\";\r\nimport * as SaleDetailService from \"./saleDetailService\";\r\nimport { BsEyeFill } from 'react-icons/bs';\r\nimport { FiPlus } from 'react-icons/fi';\r\nimport { useHistory } from \"react-router-dom\";\r\nconst SaleList = () => {\r\n    const history = useHistory();\r\n  const [saleDetail, setSaleDetail] = useState<SaleDetail[]>([]);\r\nconst [load, setLoad] = useState(true)\r\nconst [search, setSearch] = useState(\"\")\r\n  const loadItems = async () => {\r\n    const res = await SaleDetailService.getSaleDetails();\r\n    setSaleDetail(res.data);\r\n  };\r\n \r\n  const handlerInputChange = (\r\n    e: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setSearch(e.target.value);\r\n    setLoad(!load)\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadItems();\r\n  }, [load]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\" row p-5\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className=\"form-group col-lg-1\">\r\n        \r\n        </div>\r\n        <div className=\"form-group col-lg-2\">\r\n        <label className=\"col-form-label\" htmlFor=\"inputDefault\">Buscar Venta:  </label>\r\n        </div>\r\n         <div className=\"form-group col-lg-4\">\r\n        \r\n        <input type=\"text\" className=\"form-control\" placeholder=\"Ingresar nombre de cliente\" id=\"inputDefault\" onChange={handlerInputChange}/>\r\n      </div>\r\n      <div className=\"form-group col-lg-2\"></div>\r\n      <br/>\r\n      <div className=\"form-group col-lg-3\">\r\n        <button type=\"button\" onClick={()=>history.push(\"/new-sale\")} className=\"btn btn-primary\" >Nueva Venta <FiPlus/> </button>\r\n      </div>\r\n      <br/>\r\n        <div className=\"card border-primary mb-3\" style={{ width: 1000 }}>\r\n          <div className=\"card-header\">Ventas</div>\r\n          <div className=\"card-body\">\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">N° Fact</th>\r\n                  <th scope=\"col\">Cliente</th>\r\n                  <th scope=\"col\">Fecha</th>\r\n                  <th scope=\"col\">Total venta</th>\r\n                  <th scope=\"col\">... Opciones... </th>\r\n                </tr>\r\n              </thead>\r\n              {saleDetail.map((item, index) => {\r\n                if (!item.client.indexOf(search)) {\r\n                  return (\r\n                    <tbody key={index}>\r\n                      <tr>\r\n                        <td>{item.invoice}</td>\r\n                        <td>{item.client}</td>\r\n                        <td>{item.date}</td>\r\n                        <td>${item.totalSale}</td>\r\n                        <td>\r\n                        <button onClick={()=>history.push(`/saledetail/${item.invoice}`)} style={{marginRight: 5}} className=\"btn btn-primary btn-sm\"> <BsEyeFill style={{color: \"white\"}} /></button>\r\n                          </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                }\r\n                  \r\n                \r\n              })}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SaleList\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Entry\\EntryForm.tsx",["217","218","219"],"import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { EntryDetail } from \"./EntryDetail\";\r\nimport * as entryDetailService from \"./entryDetailService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Item } from \"../Items/Item\";\r\nimport * as itemService from \"../Items/itemService\";\r\nimport { Entry } from \"./Entry\";\r\nimport * as entryService from \"./entryService\";\r\nimport { BsX } from \"react-icons/bs\";\r\nimport {Modal} from 'react-bootstrap'\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\ntype FormElemEvent = React.FormEvent<HTMLFormElement>;\r\n\r\nconst EntryForm = () => {\r\n  const history = useHistory();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [item, setItem] = useState<Item>();\r\n  const [it, setIt] = useState<Item>();\r\n  const [items, setItems] = useState<Item[]>([]);\r\n  const [article, setArticle] = useState<Entry[]>([]);\r\n  const [newArticle, setNewArticle] = useState<Entry>({\r\n    productId: \"\",\r\n    productName: \"\",\r\n    detailId: 0,\r\n    amount: 0,\r\n    newPrice: 0,\r\n  });\r\n  const loadEntryD = async () => {\r\n    const res = await entryDetailService.getEntryDetails();\r\n    changeDetail(res);\r\n  };\r\n  const changeDetail = async (res:any) => {\r\n    \r\n    if (res.data.length === 0) {\r\n      setPerson({...person, detailId: 1})\r\n    } else {\r\n      setPerson({...person, detailId: res.data.length+1})\r\n\r\n    }\r\n  };\r\n  const handleSubmit = async (e: FormElemEvent) => {\r\n    e.preventDefault();\r\n    await save();\r\n  };\r\n \r\n  const [person, setPerson] = useState<EntryDetail>({\r\n    provider: \"\",\r\n    date: \"\",\r\n    totalEntry:0,\r\n    invoice: \"\",\r\n    detailId: 0\r\n  });\r\n\r\n  const handleAdd2 = async (\r\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>\r\n  ) => {\r\n    setPerson({ ...person, [e.target.name]: e.target.value });\r\n  };\r\n  \r\n  const save = async () => {\r\n    await entryDetailService.createEntryDetail(person);\r\n    article.forEach(element => {\r\n      saveArt(element)\r\n      updateItems(`${element.productId}`, parseInt(`${element.amount}`),parseInt(`${element.newPrice}` ))\r\n    });\r\n    setTimeout(()=>history.push(\"/entries\"), 3000)\r\n    toast.success(\"Entrada agregada satisfactoriamente\");\r\n    //history.push(\"/sales\");\r\n  };\r\n\r\n  const handleCancel = async () => {\r\n    \r\n    history.goBack();\r\n  }\r\n  const saveArt = async (element: any) => {\r\n    await entryService.createEntry(element)  \r\n  }\r\n  \r\n  const handleSubmit2 = (e: FormElemEvent): void => {\r\n    e.preventDefault();\r\n    addArticle(\r\n      newArticle ? newArticle : { productId: \"\", productName: \"\", amount: 0, newPrice: 0, detailId: 0 }\r\n    );\r\n    setNewArticle({\r\n      productId: \"\",\r\n      productName: \"\",\r\n      detailId:0,\r\n      amount: 0,\r\n      newPrice:0,\r\n    });\r\n  };\r\n  const addArticle = (art: Entry): void => {\r\n  \r\n    const newArticles: Entry[] = [\r\n      ...article,\r\n      {\r\n        productId: art.productId,\r\n        productName: item?.name,\r\n        amount: art.amount,\r\n        newPrice: art.newPrice,\r\n        detailId: parseInt(`${person.detailId}`),\r\n      },\r\n    ];\r\n    setArticle(newArticles);\r\n  };\r\n  const onChange2 = async (e: ChangeEvent<HTMLSelectElement>) => {\r\n    handleAdd(e);\r\n    changeStock(e);\r\n  };\r\n  const changeStock = async (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const res = await itemService.getItem(e.target.value);\r\n    setItem(res.data);\r\n  };\r\n  const handleAdd = async (\r\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>\r\n  ) => {\r\n    setNewArticle({ ...newArticle, [e.target.name]: e.target.value });\r\n  };\r\n  const removeArticle = (i: number): void => {\r\n    const newArt: Entry[] = [...article];\r\n    newArt.splice(i, 1);\r\n    setArticle(newArt);\r\n  };\r\n  const loadItems = async () => {\r\n    const res = await itemService.getItems();\r\n    setItems(res.data);\r\n  };\r\n  const updateItems = async (id : string, amount: number, newprice: number) => {\r\n    const res = await itemService.getItem(id);\r\n    setItem(res.data)\r\n    setIt({...it, _id: res.data._id, name: res.data.name, description: res.data.description, kind: res.data.kind, price: (((res.data.price*res.data.stock)+(newprice*amount))/(res.data.stock+amount)), stock: res.data.stock+amount, createAt: res.data.createAt });\r\n    \r\n  };\r\n  useEffect(() => {\r\n    if (it?._id ) {\r\n      const updateItem = async () => {\r\n        await itemService.updateItem(`${it._id}`, it);\r\n      };\r\n      updateItem();\r\n    }\r\n    \r\n  }, [it])\r\n  useEffect(() => {\r\n    let t = 0;\r\n    article.forEach(element => {\r\n      t = (element.amount)*(element.newPrice) + t\r\n    });\r\n    setPerson({...person, totalEntry: t})\r\n  }, [article])\r\n  useEffect(() => {\r\n    loadEntryD();\r\n    loadItems();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\" row p-5\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >      \r\n        <div className=\"form-group col-lg-5\"></div>\r\n        <br />\r\n        <div className=\"card border-primary mb-3\" style={{ width: 1000 }}>\r\n          <div className=\"card-header\">\r\n            <h4>Nueva Entrada en almacen</h4>\r\n          </div>\r\n          <br />\r\n          <form id=\"myform\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group col-lg-12 row\">\r\n              <div className=\"form-group col-lg-6 row\" >\r\n                <label className=\"col-form-label col-lg-3\" htmlFor=\"inputDefault\">\r\n                Proveedor:{\" \"}\r\n              </label>\r\n              <input\r\n                name=\"provider\"\r\n                type=\"text\"\r\n                className=\"form-control col-lg-8\"\r\n                placeholder=\"Nombre del Proveedor\"\r\n                form=\"myform\"\r\n                onChange={handleAdd2}\r\n              />\r\n              </div>\r\n              \r\n              <label className=\"col-form-label col-lg-1\" htmlFor=\"inputDefault\">\r\n                Fecha:{\" \"}\r\n              </label>\r\n              <input\r\n                name=\"date\"\r\n                type=\"Date\"\r\n                className=\"form-control col-lg-2\"\r\n                placeholder=\"Nombre del cliente\"\r\n                form=\"myform\"\r\n                onChange={handleAdd2}\r\n              />\r\n              <div className=\"form-group col-lg-3 row\">\r\n                 <label className=\"col-form-label col-lg-7\" htmlFor=\"inputDefault\">\r\n                N° Remisión:\r\n              </label>\r\n              \r\n              <input\r\n                name=\"invoice\"\r\n                className=\"form-control col-lg-5\"\r\n                onChange={handleAdd2}\r\n                style={{ color: \"blueviolet\" }}\r\n                form=\"myform\"\r\n                placeholder=\"# remisión\"\r\n              />\r\n              </div>\r\n              <input\r\n              type=\"hidden\"\r\n                name=\"detailId\"\r\n                className=\"form-control col-lg-5\"\r\n                onChange={handleAdd2}\r\n                style={{ color: \"blueviolet\" }}\r\n                form=\"myform\"\r\n                placeholder={`${person.invoice}`}\r\n              />\r\n              \r\n             \r\n            </div>\r\n            <input\r\n                name=\"totalEntry\"\r\n                type=\"hidden\"\r\n                onChange={handleAdd2}\r\n                style={{ color: \"blueviolet\" }}\r\n                form=\"myform\"\r\n                value={ parseInt(`${person.totalEntry}`)}\r\n              />\r\n          </form>\r\n          <div className=\"card-body\">\r\n            <div\r\n              className=\"card border-success col-lg-12\"\r\n              style={{ maxWidth: \"60rem\" }}\r\n            >\r\n              <div>\r\n                <form id=\"articleForm\" onSubmit={handleSubmit2}>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group row col-lg-12\">\r\n                      <div className=\"form-group col-lg-1\">\r\n                        <label htmlFor=\"exampleSelect2\">Articulo:</label>\r\n                        \r\n                      </div>\r\n                      <div className=\"form-group col-lg-4\">\r\n                        <select\r\n                          name=\"productId\"\r\n                          className=\"form-control\"\r\n                          form=\"articleForm\"\r\n                          id=\"exampleSelect2\"\r\n                          onChange={onChange2}\r\n                          value={newArticle ? newArticle.productId : \"\"}\r\n                        >\r\n                          <option>Elija un articulo</option>\r\n                          {items.map((item) => {\r\n                            return (\r\n                              <option key={item._id} value={item._id}>\r\n                                {item.name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-lg-1\">\r\n                        <label\r\n                          className=\"col-form-label\"\r\n                          htmlFor=\"inputDefault\"\r\n                        >\r\n                          Cantidad:\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"form-group col-lg-2\">\r\n                        <input\r\n                          name=\"amount\"\r\n                          type=\"Number\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"0\"\r\n                          form=\"articleForm\"\r\n                          onChange={handleAdd}\r\n                          value={newArticle ? newArticle.amount : 0}\r\n                          autoFocus\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-lg-1\">\r\n                        <label\r\n                          className=\"col-form-label\"\r\n                          htmlFor=\"inputDefault\"\r\n                        >\r\n                          Precio:\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"form-group col-lg-2\">\r\n                        <input\r\n                          name=\"newPrice\"\r\n                          type=\"Number\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"$00.00\"\r\n                          onChange={handleAdd}\r\n                          form=\"articleForm\"\r\n                          value={newArticle ? newArticle.newPrice: 0}\r\n                          autoFocus\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      form=\"articleForm\"\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      Agregar\r\n                    </button>\r\n                    <br />\r\n                    <br />\r\n                    <table className=\"table table-striped\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">Opciones</th>\r\n                          <th scope=\"col\">Articulo</th>\r\n                          <th scope=\"col\">Cantidad</th>\r\n                          <th scope=\"col\">Precio </th>\r\n                          <th scope=\"col\">Total</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {article.map((item, i: number) => {\r\n                          let name = \"\";\r\n                          {\r\n                            items.forEach((element) => {\r\n                              if (item.productId === element._id) {\r\n                                name = element.name;\r\n                              }\r\n                            });\r\n                          }\r\n                          return (\r\n                            <tr key={i}>\r\n                              <td>\r\n                                <button\r\n                                  style={{ marginRight: 5 }}\r\n                                  className=\"btn btn-danger btn-sm\"\r\n                                  onClick={() => removeArticle(i)}\r\n                                >\r\n                                  {\" \"}\r\n                                  <BsX />\r\n                                </button>\r\n                              </td>\r\n                              <td>{name}</td>\r\n                              <td>{item.amount}</td>\r\n                              <td>${item.newPrice}</td>\r\n                              <td>\r\n                                $\r\n                                {parseInt(`${item.newPrice}`) *\r\n                                  parseInt(`${item.amount}`)}{\" \"}\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                        <tr>\r\n                          <td></td>\r\n                          <td></td>\r\n                          <td></td>\r\n                          <td>Total</td>\r\n                          <td>${person.totalEntry}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              form=\"myform\"\r\n              className=\"btn btn-success\"\r\n              style={{ margin: 20 }}\r\n              onClick={handleShow}\r\n            >\r\n              Guardar\r\n            </button>\r\n            <button className=\"btn btn-danger\" onClick={handleCancel}>\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div> \r\n        <div >  \r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered={true}\r\n      >\r\n        <Modal.Body  style={{backgroundColor: \"#000\", }}>\r\n          <div style={{\r\n            borderWidth: 3,\r\n            borderColor: \"#fff\",\r\n            width: \"100%\"\r\n          }}>\r\n          <Loader\r\n         type=\"Bars\"\r\n         color=\"#18bc9c\"\r\n         height={100}\r\n         width={\"100%\"}\r\n         timeout={5000} //3 secs\r\n      />\r\n      </div>\r\n        </Modal.Body>\r\n        <Modal.Footer style={{backgroundColor: \"#000\", justifyContent: 'center', color: \"#18bc9c \"}}>\r\n             Por favor espere que cargue la entrada...\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n    </div>  \r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default EntryForm;","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Navigation\\Footer.tsx",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Deposit\\DepositForm.tsx",["220"],"import React, { useState, ChangeEvent, FormEvent, useEffect } from 'react'\r\nimport { Deposit } from './Deposit'\r\nimport { SaleDetail } from '../Sales/SaleDetail'\r\nimport { Sale } from '../Sales/Sale'\r\nimport * as depositService from './depositService'\r\nimport { toast } from \"react-toastify\";\r\nimport * as saleDetailService from '../Sales/saleDetailService'\r\nimport * as saleService from '../Sales/saleService'\r\nimport { FiEdit} from 'react-icons/fi';\r\nimport { BsTrash } from 'react-icons/bs';\r\n\r\nconst DepositForm = () => {\r\n    const usCurrencyFormat = new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' })\r\n\r\n    const initialState = {\r\n        depositNumber: \"\",\r\n        kind: \"\",\r\n        amount: 0,\r\n        date: \"\"\r\n    };\r\n\r\n    const [item, setItem] = useState<Deposit>(initialState);\r\n    const [deposits, setDeposit] = useState<Deposit[]>([])\r\n    const [salesDetail, setSalesDetail] = useState<SaleDetail[]>([])\r\n    const [sales, setSales] = useState<Sale[]>([])\r\n    const [load, setLoad] = useState(true)\r\n    const [total, setTotal] = useState(0)\r\n    const [ventas, setVentas] = useState(0)\r\n    const [totalDeuda, setTotalDeuda] = useState(0)\r\n    const [error, setError] = useState(false)\r\n    const loadDeposit = async () => {\r\n        const res = await depositService.getDeposits();\r\n        setDeposit(res.data)\r\n    }\r\n    const loadVentas = async () => {\r\n        const res = await saleDetailService.getSaleDetails();\r\n        setSalesDetail(res.data)\r\n        const res2 = await saleService.getSales();\r\n        setSales(res2.data)\r\n    }\r\n\r\n    const totalDatos = async () => {\r\n        let t = 0;\r\n        deposits.forEach(element => {\r\n            t = element.amount + t\r\n        });\r\n        setTotal(t)\r\n        let v = 0;\r\n        v = 0;\r\n        salesDetail.forEach(element => {\r\n            v = element.totalSale + v\r\n        })\r\n        setVentas(v)\r\n        let p = 0;\r\n        sales.forEach(element => {\r\n            p = (element.amount * parseInt(`${element.priceBuy}`)) + p\r\n        })\r\n        setTotalDeuda(p)\r\n\r\n    }\r\n\r\n    const a = usCurrencyFormat.format(ventas); // \"$100.10\"\r\n    const b = usCurrencyFormat.format(total); // \"$100.10\"\r\n    const c = usCurrencyFormat.format(totalDeuda - total); // \"$100.10\"\r\n   \r\n\r\n    const handlerInputChange = (\r\n        e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>\r\n    ) => {\r\n        setItem({ ...item, [e.target.name]: e.target.value });\r\n    };\r\n    const handlSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (item.amount && item.date && item.depositNumber && item.kind) {\r\n            await depositService.createDeposit(item)\r\n            toast.success('Articulo agregado satisfactoriamente')\r\n            setLoad(!load)\r\n            setError(false)\r\n        }\r\n        else {\r\n            setError(true)\r\n        }\r\n\r\n        //history.push('/items')\r\n    }\r\n    const handleDelete = async(id:string) =>{\r\n\r\n        if (window.confirm(\"¿Realmente desea eliminar esta consignación?\")) {\r\n            await depositService.deleteDeposit(id)\r\n            toast.error(\"Se ha eliminado correctamente\")\r\n              setLoad(!load)\r\n          }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        loadDeposit();\r\n        loadVentas();\r\n\r\n    }, [load])\r\n\r\n    useEffect(() => {\r\n        totalDatos();\r\n    }, [deposits, salesDetail, sales])\r\n\r\n    let componente;\r\n    if (error) {\r\n        componente =\r\n            <div className=\"card border-danger ml-3 mb-2\" style={{ backgroundColor: '#ffd9d4' }} >\r\n                <h6 className=\"card-title ml-5 mr-5 m-2\">Por favor digite todos los campos </h6>\r\n            </div>\r\n    } else {\r\n        componente = null;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\" row-5 m-3\"\r\n            style={{\r\n                alignItems: \"center\",\r\n                alignContent: \"center\",\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n            }}\r\n        >\r\n\r\n            <div className=\"card border-primary mb-1\" style={{ width: \"95%\" }}>\r\n                <div className=\"card-header\">Consignaciones </div>\r\n                <div className=\"card-body\">\r\n\r\n                    <form onSubmit={handlSubmit} className=\"form-horizontal\">\r\n                        <fieldset>\r\n                            <div className=\" row form-group \">\r\n                                <div className=\"col-lg-2 row form-group\">\r\n                                    <label className=\"control-label col-lg-4\">No </label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control col-lg-8 \"\r\n                                        id=\"depositNumber\"\r\n                                        name=\"depositNumber\"\r\n                                        placeholder=\"comprobante\"\r\n                                        onChange={handlerInputChange}\r\n                                    />\r\n                                </div>\r\n\r\n\r\n\r\n                                <div className=\"col-lg-3 row form-group\">\r\n                                    <label htmlFor=\"select\" className=\"col-lg-4 control-label\">\r\n                                        Tipo\r\n                                    </label>\r\n\r\n                                    <select\r\n                                        className=\"form-control col-lg-8\"\r\n                                        name=\"kind\"\r\n                                        id=\"kind\"\r\n                                        onChange={handlerInputChange}\r\n                                    >\r\n                                        <option selected>Seleccionar</option>\r\n                                        <option value=\"Efectivo\">Efectivo</option>\r\n                                        <option value=\"Banco\">Banco</option>\r\n                                        <option value=\"Nequi\">Nequi</option>\r\n                                    </select>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-3 row form-group\">\r\n                                    <label className=\"col-lg-4 control-label\">Precio</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        step=\"any\"\r\n                                        name=\"amount\"\r\n                                        className=\"form-control col-lg-8\"\r\n                                        id=\"amount\"\r\n                                        placeholder=\"Precio\"\r\n                                        onChange={handlerInputChange}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-lg-3 row form-group\">\r\n                                    <label className=\"col-lg-5 control-label\">Fecha</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        step=\"any\"\r\n                                        name=\"date\"\r\n                                        className=\"form-control col-lg-7\"\r\n                                        id=\"date\"\r\n                                        placeholder=\"Fecha\"\r\n                                        onChange={handlerInputChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"col-lg-2 col-lg-offset-2\">\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" >\r\n                                        Submit\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n\r\n                        </fieldset>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                {componente}\r\n            </div>\r\n            <div className=\" row\">\r\n                <div className=\"card border-primary  form-group col-md-8 ml-3 \" style={{ height: \"500px\" }}  >\r\n                    <div className=\"table-responsive\" >\r\n                        <table className=\"table table-striped table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th># Comprobante</th>\r\n                                    <th>Tipo</th>\r\n                                    <th>Precio</th>\r\n                                    <th>Fecha</th>\r\n                                    <th scope=\"col\">Opciones... </th>\r\n                                </tr>\r\n                            </thead>\r\n                            {deposits.map((deposit, index) => {\r\n                                return (\r\n                                    <tbody key={index}>\r\n                                        <tr>\r\n                                            <td>{deposit.depositNumber}</td>\r\n\r\n                                            <td>{deposit.kind}</td>\r\n                                            <td>{deposit.amount}</td>\r\n\r\n                                            <td>{deposit.date}</td>\r\n                                            <td><button className=\"btn btn-warning btn-sm\"> <FiEdit style={{color: \"#fff\"}}/></button> <button onClick={()=> deposit._id && handleDelete(deposit._id)} className=\"btn btn-danger btn-sm\"> <BsTrash/></button>  </td>\r\n                                           \r\n                                        </tr>\r\n\r\n                                    </tbody>\r\n\r\n                                )\r\n\r\n                            })}\r\n\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card border-primary form-group  col-md-3 ml-2  \" >\r\n\r\n                    <div>\r\n                        <div className=\"card border-secondary mb-3\" style={{ maxWidth: '20rem' }}>\r\n                            <div className=\"card-header\">Ventas</div>\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">{a}</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card border-success mb-3\" style={{ maxWidth: '20rem' }}>\r\n                            <div className=\"card-header\">Consignado</div>\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">{b}</h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card border-danger mb-3\" style={{ maxWidth: '20rem' }}>\r\n                            <div className=\"card-header\">Deuda</div>\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">{c}</h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default DepositForm\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Deposit\\DepositList.tsx",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Sales\\SaleForm.tsx",["221","222","223"],"import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { SaleDetail } from \"./SaleDetail\";\r\nimport * as saleDetailService from \"./saleDetailService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Item } from \"../Items/Item\";\r\nimport * as itemService from \"../Items/itemService\";\r\nimport { Sale } from \"./Sale\";\r\nimport * as saleService from \"./saleService\";\r\nimport { BsX } from \"react-icons/bs\";\r\nimport {Modal} from 'react-bootstrap'\r\nimport Loader from 'react-loader-spinner'\r\n\r\n\r\ntype FormElemEvent = React.FormEvent<HTMLFormElement>;\r\n\r\nconst SaleForm = () => {\r\n  const history = useHistory();\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [item, setItem] = useState<Item>();\r\n  const [it, setIt] = useState<Item>();\r\n  const [items, setItems] = useState<Item[]>([]);\r\n  const [article, setArticle] = useState<Sale[]>([]);\r\n  const [newArticle, setNewArticle] = useState<Sale>({\r\n    productId: \"\",\r\n    productName: \"\",\r\n    detailId: 0,\r\n    amount: 0,\r\n    priceSale: 0,\r\n    priceBuy: 0,\r\n    utility:0,\r\n  });\r\n  const loadSalesD = async () => {\r\n    const res = await saleDetailService.getSaleDetails();\r\n    changeDetail(res);\r\n  };\r\n  const handleSubmit = async (e: FormElemEvent) => {\r\n    e.preventDefault();\r\n    await save();\r\n  };\r\n  const changeDetail = async (res:any) => {\r\n    \r\n    if (res.data.length === 0) {\r\n      setPerson({...person, invoice: 1})\r\n    } else {\r\n      setPerson({...person, invoice: res.data.length+1})\r\n\r\n    }\r\n  };\r\n  const [person, setPerson] = useState<SaleDetail>({\r\n    client: \"\",\r\n    date: \"\",\r\n    totalSale:0,\r\n    invoice: 0,\r\n  });\r\n\r\n  const handleAdd2 = async (\r\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>\r\n  ) => {\r\n    setPerson({ ...person, [e.target.name]: e.target.value });\r\n  };\r\n  \r\n  const save = async () => {\r\n    await saleDetailService.createSaleDetail(person);\r\n    article.forEach(element => {\r\n      saveArt(element)\r\n      updateItems(`${element.productId}`, parseInt(`${element.amount}`))\r\n    });\r\n    setTimeout(()=>history.push(\"/sales\"), 3000)\r\n    toast.success(\"Articulo agregado satisfactoriamente\");\r\n    //history.push(\"/sales\");\r\n  };\r\n\r\n  const handleCancel = async () => {\r\n    \r\n    history.goBack();\r\n  }\r\n  const saveArt = async (element: any) => {\r\n    \r\n    await saleService.createSale(element)\r\n   \r\n    \r\n  }\r\n  \r\n\r\n  const handleSubmit2 = (e: FormElemEvent): void => {\r\n    e.preventDefault();\r\n    addArticle(\r\n      newArticle ? newArticle : { productId: \"\", productName: \"\", amount: 0, priceSale: 0, detailId: 0, priceBuy: 0, utility:0 }\r\n    );\r\n    setNewArticle({\r\n      productId: \"\",\r\n      productName: \"\",\r\n      detailId:0,\r\n      amount: 0,\r\n      priceSale: 0,\r\n      priceBuy: 0,\r\n      utility: 0,\r\n    });\r\n  };\r\n  const addArticle = (art: Sale): void => {\r\n  \r\n    const newArticles: Sale[] = [\r\n      ...article,\r\n      {\r\n        productId: art.productId,\r\n        productName: item?.name,\r\n        amount: art.amount,\r\n        priceSale: art.priceSale,\r\n        detailId: parseInt(`${person.invoice}`),\r\n        priceBuy: parseInt(`${item?.price}`),\r\n        utility: (art.priceSale-parseInt(`${item?.price}`))*art.amount,\r\n\r\n      },\r\n    ];\r\n    setArticle(newArticles);\r\n  };\r\n  const onChange2 = async (e: ChangeEvent<HTMLSelectElement>) => {\r\n    handleAdd(e);\r\n    changeStock(e);\r\n  };\r\n  const changeStock = async (e: ChangeEvent<HTMLSelectElement>) => {\r\n    const res = await itemService.getItem(e.target.value);\r\n    setItem(res.data);\r\n  };\r\n  const handleAdd = async (\r\n    e: ChangeEvent<HTMLInputElement | HTMLSelectElement>\r\n  ) => {\r\n    setNewArticle({ ...newArticle, [e.target.name]: e.target.value });\r\n  };\r\n  const removeArticle = (i: number): void => {\r\n    const newArt: Sale[] = [...article];\r\n    newArt.splice(i, 1);\r\n    setArticle(newArt);\r\n  };\r\n  const loadItems = async () => {\r\n    const res = await itemService.getItems();\r\n    setItems(res.data);\r\n  };\r\n  const updateItems = async (id : string, amount: number) => {\r\n    const res = await itemService.getItem(id);\r\n    setItem(res.data)\r\n    setIt({...it, _id: res.data._id, name: res.data.name, description: res.data.description, kind: res.data.kind, price: res.data.price, stock: res.data.stock-amount, createAt: res.data.createAt });\r\n    \r\n  };\r\n  useEffect(() => {\r\n    if (it?._id ) {\r\n      const updateItem = async () => {\r\n        await itemService.updateItem(`${it._id}`, it);\r\n      };\r\n      updateItem();\r\n    }\r\n    \r\n  }, [it])\r\n  useEffect(() => {\r\n    let t = 0;\r\n    article.forEach(element => {\r\n      t = (element.amount)*(element.priceSale) + t\r\n    });\r\n    setPerson({...person, totalSale: t})\r\n  }, [article])\r\n  useEffect(() => {\r\n    loadSalesD();\r\n    loadItems();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\" row p-5\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >      \r\n        <div className=\"form-group col-lg-5\"></div>\r\n        <br />\r\n        <div className=\"card border-primary mb-3\" style={{ width: 1000 }}>\r\n          <div className=\"card-header\">\r\n            <h4>Nueva venta</h4>\r\n          </div>\r\n          <br />\r\n          <form id=\"myform\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group col-lg-12 row\">\r\n              <label className=\"col-form-label col-lg-1\" htmlFor=\"inputDefault\">\r\n                Cliente{\" \"}\r\n              </label>\r\n              <input\r\n                name=\"client\"\r\n                type=\"text\"\r\n                className=\"form-control col-lg-4\"\r\n                placeholder=\"Nombre del cliente\"\r\n                form=\"myform\"\r\n                onChange={handleAdd2}\r\n              />\r\n              <label className=\"col-form-label col-lg-1\" htmlFor=\"inputDefault\">\r\n                Fecha:{\" \"}\r\n              </label>\r\n              <input\r\n                name=\"date\"\r\n                type=\"Date\"\r\n                className=\"form-control col-lg-2\"\r\n                placeholder=\"Nombre del cliente\"\r\n                form=\"myform\"\r\n                onChange={handleAdd2}\r\n              />\r\n              <label className=\"col-form-label col-lg-2\" htmlFor=\"inputDefault\">\r\n                Numero de factura:\r\n              </label>\r\n              <input\r\n                className=\"form-control col-lg-1\"\r\n                onChange={handleAdd2}\r\n                style={{ color: \"blueviolet\" }}\r\n                form=\"myform\"\r\n                value={person.invoice}\r\n                placeholder={`${person.invoice}`}\r\n              />\r\n            </div>\r\n            <input\r\n                name=\"totalSale\"\r\n                type=\"hidden\"\r\n                onChange={handleAdd2}\r\n                style={{ color: \"blueviolet\" }}\r\n                form=\"myform\"\r\n                value={ parseInt(`${person.totalSale}`)}\r\n              />\r\n          </form>\r\n          <div className=\"card-body\">\r\n            <div\r\n              className=\"card border-success col-lg-12\"\r\n              style={{ maxWidth: \"60rem\" }}\r\n            >\r\n              <div>\r\n                <form id=\"articleForm\" onSubmit={handleSubmit2}>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"form-group row col-lg-12\">\r\n                      <div className=\"form-group col-lg-4\">\r\n                        <label htmlFor=\"exampleSelect2\">Articulo</label>\r\n                        <select\r\n                          name=\"productId\"\r\n                          className=\"form-control\"\r\n                          form=\"articleForm\"\r\n                          id=\"exampleSelect2\"\r\n                          onChange={onChange2}\r\n                          value={newArticle ? newArticle.productId : \"\"}\r\n                        >\r\n                          <option>Elija un articulo</option>\r\n                          {items.map((item) => {\r\n                            return (\r\n                              <option key={item._id} value={item._id}>\r\n                                {item.name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"form-group col-lg-2\">\r\n                        <label\r\n                          className=\"col-form-label\"\r\n                          htmlFor=\"inputDefault\"\r\n                        >\r\n                          Cantidad\r\n                        </label>\r\n                        <input\r\n                          name=\"amount\"\r\n                          type=\"Number\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"0\"\r\n                          form=\"articleForm\"\r\n                          onChange={handleAdd}\r\n                          value={newArticle ? newArticle.amount : 0}\r\n                          autoFocus\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group col-lg-2\">\r\n                        <fieldset disabled>\r\n                          <label\r\n                            className=\"control-label\"\r\n                            htmlFor=\"disabledInput\"\r\n                          >\r\n                            Stock\r\n                          </label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            value={item ? item.stock : \"\"}\r\n                            disabled\r\n                          ></input>\r\n                        </fieldset>\r\n                      </div>\r\n                      <div className=\"form-group col-lg-2\">\r\n                        <fieldset disabled>\r\n                          <label\r\n                            className=\"control-label\"\r\n                            htmlFor=\"disabledInput\"\r\n                          >\r\n                            Precio sugerido\r\n                          </label>\r\n                          <input\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            value={item ? item.price * 0.3 + item.price : \"0\"}\r\n                            disabled\r\n                          />\r\n                        </fieldset>\r\n                      </div>\r\n                      <div className=\"form-group col-lg-2\">\r\n                        <label\r\n                          className=\"col-form-label\"\r\n                          htmlFor=\"inputDefault\"\r\n                        >\r\n                          Precio venta\r\n                        </label>\r\n                        <input\r\n                          name=\"priceSale\"\r\n                          type=\"Number\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"$00.00\"\r\n                          onChange={handleAdd}\r\n                          form=\"articleForm\"\r\n                          value={newArticle ? newArticle.priceSale : 0}\r\n                          autoFocus\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      form=\"articleForm\"\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary\"\r\n                    >\r\n                      Agregar\r\n                    </button>\r\n                    <br />\r\n                    <br />\r\n                    <table className=\"table table-striped\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">Opciones</th>\r\n                          <th scope=\"col\">Articulo</th>\r\n                          <th scope=\"col\">Cantidad</th>\r\n                          <th scope=\"col\">Precio venta</th>\r\n                          <th scope=\"col\">Total</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {article.map((item, i: number) => {\r\n                          let name = \"\";\r\n                          {\r\n                            items.forEach((element) => {\r\n                              if (item.productId === element._id) {\r\n                                name = element.name;\r\n                              }\r\n                            });\r\n                          }\r\n                          return (\r\n                            <tr key={i}>\r\n                              <td>\r\n                                <button\r\n                                  style={{ marginRight: 5 }}\r\n                                  className=\"btn btn-danger btn-sm\"\r\n                                  onClick={() => removeArticle(i)}\r\n                                >\r\n                                  {\" \"}\r\n                                  <BsX />\r\n                                </button>\r\n                              </td>\r\n                              <td>{name}</td>\r\n                              <td>{item.amount}</td>\r\n                              <td>${item.priceSale}</td>\r\n                              <td>\r\n                                $\r\n                                {parseInt(`${item.priceSale}`) *\r\n                                  parseInt(`${item.amount}`)}{\" \"}\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                        <tr>\r\n                          <td></td>\r\n                          <td></td>\r\n                          <td></td>\r\n                          <td>Total</td>\r\n                          <td>${person.totalSale}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              form=\"myform\"\r\n              className=\"btn btn-success\"\r\n              style={{ margin: 20 }}\r\n              onClick={handleShow}\r\n            >\r\n              Guardar\r\n            </button>\r\n            <button className=\"btn btn-danger\" onClick={handleCancel}>\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div> \r\n        <div >  \r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        centered={true}\r\n      >\r\n        <Modal.Body  style={{backgroundColor: \"#000\", }}>\r\n          <div style={{\r\n            borderWidth: 3,\r\n            borderColor: \"#fff\",\r\n            width: \"100%\"\r\n          }}>\r\n          <Loader\r\n         type=\"Bars\"\r\n         color=\"#18bc9c\"\r\n         height={100}\r\n         width={\"100%\"}\r\n         timeout={5000} //3 secs\r\n      />\r\n      </div>\r\n        </Modal.Body>\r\n        <Modal.Footer style={{backgroundColor: \"#000\", justifyContent: 'center', color: \"#18bc9c \"}}>\r\n             Por favor espere que cargue la venta...\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n    </div>  \r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default SaleForm;\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Expenses\\ExpenseForm.tsx",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Expenses\\ExpenseList.tsx",["224"],"import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { Expense } from \"./Expense\";\r\nimport * as expenseService from \"./expenseService\";\r\nimport { BsTrash } from 'react-icons/bs';\r\nimport { FiEdit, FiPlus } from 'react-icons/fi';\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ItemList = () => {\r\n  const history = useHistory();\r\n  const [expense, setExpenses] = useState<Expense[]>([]);\r\nconst [load, setLoad] = useState(true)\r\nconst [search, setSearch] = useState(\"\")\r\n  const loadItems = async () => {\r\n    const res = await expenseService.getExpenses();\r\n    setExpenses(res.data);\r\n  };\r\n \r\n  const handleDelete = async (id:string) => {\r\n      if (window.confirm(\"¿Realmente desea eliminar este Gasto?\")) {\r\n        await expenseService.deleteExpense(id)\r\n        toast.error(\"Gasto Eliminado correctamente\")\r\n          setLoad(!load)\r\n      }\r\n      \r\n  }\r\n  const handlerInputChange = (\r\n    e: ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setSearch(e.target.value);\r\n    setLoad(!load)\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadItems();\r\n  }, [load]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\" row p-5\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className=\"form-group col-lg-1\">\r\n        \r\n        </div>\r\n        <div className=\"form-group col-lg-2\">\r\n        <label className=\"col-form-label\" htmlFor=\"inputDefault\">Buscar producto:  </label>\r\n        </div>\r\n         <div className=\"form-group col-lg-4\">\r\n        \r\n        <input type=\"text\" className=\"form-control\" placeholder=\"Ingresar nombre de producto\" id=\"inputDefault\" onChange={handlerInputChange}/>\r\n      </div>\r\n      <div className=\"form-group col-lg-2\"></div>\r\n      <br/>\r\n      <div className=\"form-group col-lg-3\">\r\n        <button type=\"button\" onClick={()=>history.push(\"/new-expense\")} className=\"btn btn-primary\" >Nuevo Gasto <FiPlus/> </button>\r\n      </div>\r\n      <br/>\r\n        <div className=\"card border-primary mb-3\" style={{ width: 1000 }}>\r\n          <div className=\"card-header\">Inventario</div>\r\n          <div className=\"card-body\">\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Concepto</th>\r\n                  <th scope=\"col\">Fecha</th>\r\n                  <th scope=\"col\">Valor</th>\r\n                  <th scope=\"col\">... Opciones... </th>\r\n                </tr>\r\n              </thead>\r\n              {expense.map((item, index) => {\r\n                if (!item.concept.indexOf(search)) {\r\n                  return (\r\n                    <tbody key={index}>\r\n                      <tr>\r\n                        <th scope=\"row\">{index+1}</th>\r\n                        <td>{item.concept}</td>\r\n                        <td>{item.date}</td>\r\n                        <td>${item.price}</td>\r\n                        <td>\r\n                          <button className=\"btn btn-warning btn-sm\" style={{marginRight: 5}}> <FiEdit style={{color: \"#fff\"}}/></button> \r\n                        <button onClick={()=>item._id && handleDelete(item._id)} style={{marginRight: 5}} className=\"btn btn-danger btn-sm\"> <BsTrash/></button>\r\n                          </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                }\r\n                  \r\n                \r\n              })}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemList;\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Items\\ItemForm.tsx",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Report\\Dashboard.tsx",["225","226"],"import React, { useEffect, useState } from \"react\";\r\nimport logo from \"./3556940.jpg\";\r\nimport { SaleDetail } from \"../Sales/SaleDetail\";\r\nimport * as SaleDetailService from \"../Sales/saleDetailService\";\r\nimport { EntryDetail } from \"../Entry/EntryDetail\";\r\nimport * as EntryDetailService from \"../Entry/entryDetailService\";\r\nimport { Sale } from \"../Sales/Sale\";\r\nimport * as SaleService from \"../Sales/saleService\";\r\nimport { Deposit } from \"../Deposit/Deposit\";\r\nimport * as DepositService from \"../Deposit/depositService\";\r\nimport { Expense } from \"../Expenses/Expense\";\r\nimport * as ExpenseService from \"../Expenses/expenseService\";\r\nimport { AiOutlineShoppingCart, AiOutlineWarning} from \"react-icons/ai\";\r\nimport { FcMoneyTransfer } from \"react-icons/fc\";\r\nimport { GrMoney } from \"react-icons/gr\";\r\nimport { GiPayMoney, GiPiggyBank } from \"react-icons/gi\";\r\nimport { Item } from \"../Items/Item\";\r\nimport * as ItemService from \"../Items/itemService\";\r\n\r\nconst Dashboard = () => {\r\n  const [saleDetail, setSaleDetail] = useState<SaleDetail[]>([]);\r\n  const [sale, setSale] = useState<Sale[]>([]);\r\n  const [items, setItems] = useState<Item[]>([]);\r\n  const [deposit, setDeposit] = useState<Deposit[]>([]);\r\n  const [expense, setExpense] = useState<Expense[]>([]);\r\n  const [entryDetail, setEntryDetail] = useState<EntryDetail[]>([]);\r\n  const [totalSale, setTotalSale] = useState(0);\r\n  const [totalEntry, setTotalEntry] = useState(0);\r\n  const [totalDeposit, setTotalDeposit] = useState(0);\r\n  const [totalUtility, setTotalUtility] = useState(0);\r\n  const [totalItems, setTotalItems] = useState(0);\r\n  const [totalDebt, setTotalDebt] = useState(0);\r\n  const [totalExpenses, setTotalExpenses] = useState(0);\r\n  const loadSales = async () => {\r\n    const res = await SaleDetailService.getSaleDetails();\r\n    setSaleDetail(res.data);\r\n    const res2 = await DepositService.getDeposits();\r\n    setDeposit(res2.data);\r\n    const res3 = await ExpenseService.getExpenses();\r\n    setExpense(res3.data);\r\n    const res4 = await SaleService.getSales();\r\n    setSale(res4.data);\r\n    const res5 = await EntryDetailService.getEntryDetails();\r\n    setEntryDetail(res5.data);\r\n    const res6 = await ItemService.getItems();\r\n    setItems(res6.data);\r\n  };\r\n\r\n  const sales = async () => {\r\n    let total = 0;\r\n    saleDetail.forEach((element) => {\r\n      total = element.totalSale + total;\r\n\r\n    });\r\n    setTotalSale(total);\r\n  };\r\n  const it = async () => {\r\n    let total = 0;\r\n    items.forEach((element) => {\r\n      total = element.price*element.stock + total;\r\n\r\n    });\r\n    setTotalItems(total);\r\n  };\r\n  const entries = async () => {\r\n    let total = 0;\r\n    entryDetail.forEach((element) => {\r\n      total = element.totalEntry + total;\r\n\r\n    });\r\n    setTotalEntry(total);\r\n  };\r\n  const deposits = async () => {\r\n    let total = 0;\r\n    deposit.forEach((element) => {\r\n      total = element.amount + total;\r\n    });\r\n    setTotalDeposit(total);\r\n  };\r\n  const expenses = async () => {\r\n    let total = 0;\r\n    expense.forEach((element) => {\r\n      total = element.price + total;\r\n    });\r\n    setTotalExpenses(total);\r\n  }\r\n  const utilities = async () => {\r\n    let total = 0;\r\n    let debts = 0;\r\n    sale.forEach((element) => {\r\n      total = parseInt(`${element.utility}`) + total;\r\n      debts = parseInt(`${element.priceBuy}`)*parseInt(`${element.amount}`)  + debts;\r\n    });\r\n    setTotalUtility(total);\r\n    setTotalDebt(debts-totalDeposit)\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSales();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    sales();\r\n    it();\r\n    deposits();\r\n    utilities();\r\n    expenses();\r\n    entries();\r\n  }, [saleDetail, deposit, sale, expense, entryDetail, items]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\" row p-5\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className=\"card border-primary mb-3\" style={{ width: 1000 }}>\r\n          <br />\r\n          <div\r\n            className=\" form-group row col-lg-12\"\r\n            style={{ alignItems: \"center\", textAlign: \"center\" }}\r\n          >\r\n            <div className=\" form-group col-lg-2\">\r\n              <img src={logo} style={{ width: \"80%\" }} />\r\n            </div>\r\n            <div className=\" form-group col-lg-10\">\r\n              <h2>Administración Ferreteria Habitat</h2>\r\n            </div>\r\n          </div>\r\n          <hr style={{ height: 3, backgroundColor: \"#18bc9c\" }} />\r\n\r\n          <div className=\"card-body row\">\r\n            <div\r\n              className=\"col-lg-4 card text-black border-success mb-3 \"\r\n              style={{ maxWidth: \"27%\", marginInline: 25 }}\r\n            >\r\n              <div className=\"card-header\"> Ventas</div>\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">\r\n                  <AiOutlineShoppingCart size={40} /> $ {totalSale}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"col-lg-4 card text-black border-info mb-3\"\r\n              style={{ maxWidth: \"27%\", marginInline: 25 }}\r\n            >\r\n              <div className=\"card-header\">Consignaciones</div>\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">\r\n                  <FcMoneyTransfer size={40} /> ${totalDeposit}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"col-lg-4 card text-black border-warning mb-3\"\r\n              style={{ maxWidth: \"27%\", marginInline: 25 }}\r\n            >\r\n              <div className=\"card-header\">Gastos</div>\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\"><GiPayMoney size={40}/> ${totalExpenses}</h4>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"col-lg-4 card border-primary text-black mb-3\"\r\n              style={{\r\n                maxWidth: \"27%\",\r\n                marginInline: 25,\r\n              }}\r\n            >\r\n              <div className=\"card-header\">Costo de Inventario</div>\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\"><GrMoney size={40}/> ${totalItems}</h4>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"col-lg-4 card border-primary text-black mb-3\"\r\n              style={{\r\n                maxWidth: \"27%\",\r\n                marginInline: 25,\r\n              }}\r\n            >\r\n              <div className=\"card-header\">Total Remisiones</div>\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\"><GrMoney size={40}/> ${totalEntry}</h4>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              className=\"col-lg-4 card border-primary text-black mb-3\"\r\n              style={{\r\n                maxWidth: \"27%\",\r\n                marginInline: 25,\r\n              }}\r\n            >\r\n              <div className=\"card-header\">Ganancia x ventas</div>\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\"><GrMoney size={40}/> ${totalUtility}</h4>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"col-lg-4 card text-white bg-danger mb-3\"\r\n              style={{ maxWidth: \"27%\", marginInline: 25 }}\r\n            >\r\n              <div className=\"card-header\">Deuda</div>\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\"><AiOutlineWarning size={40}/> ${totalDebt}</h4>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"col-lg-4 card text-black mb-3\"\r\n              style={{\r\n                maxWidth: \"27%\",\r\n                marginInline: 25,\r\n                backgroundColor: \"#54FA27\",\r\n              }}\r\n            >\r\n              <div className=\"card-header\">Utilidad</div>\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\"><GiPiggyBank size={40}/> ${totalUtility-totalExpenses  }</h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Items\\itemService.ts",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Sales\\saleDetailService.ts",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Sales\\saleService.ts",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Expenses\\expenseService.ts",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Deposit\\depositService.ts",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Entry\\entryService.ts",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Entry\\entryDetailService.ts",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\Router\\PublicRouter.tsx",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\Router\\PrivateRouter.tsx",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\context\\ContextSidebar.tsx",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\utils\\verifyToken.ts",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Auth\\RememberPassword.tsx",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Navigation\\SideBar.tsx",["227"],"import \"./navigation.css\";\r\nimport { SideBarData } from \"./SideBarData\";\r\nimport userJson from \"../../utils/userJson\";\r\nimport { useContext} from \"react\";\r\nimport { IoArrowBack } from \"react-icons/io5\";\r\nimport ContextSidebar from \"../../context/ContextSidebar\";\r\n\r\nfunction SideBar() {\r\n  const array: any = userJson();\r\n  const name = array[1] + \" \" + array[2];\r\n  const {position, setPosition} = useContext<any>(ContextSidebar)\r\n  function handleClose() {\r\n    setPosition(!position);\r\n  }\r\n  return (\r\n    <>\r\n      <div className={position ? \"Sidebar active\" : \"Sidebar\"}>\r\n        <button type=\"button\" className=\"btn btn-link btn-lg\" style={{marginLeft: \"80%\"}} onClick={handleClose}>\r\n          <IoArrowBack/>\r\n        </button>\r\n\r\n        <div style={{ textAlign: \"center\", paddingBottom: \"10%\" }}>\r\n          <img\r\n            src=\"https://image.shutterstock.com/image-photo/smiling-cat-business-suit-260nw-219244810.jpg\"\r\n            style={{\r\n              width: \"50%\",\r\n              border: \"1px solid black\",\r\n              borderRadius: \"50%\",\r\n            }}\r\n          />\r\n          <h5 style={{ color: \"#ecf0f1\", paddingTop: 15 }}>{name}</h5>\r\n        </div>\r\n        <ul className=\"SidebarList\">\r\n          {SideBarData.map((val, key) => {\r\n            return (\r\n                <a href={val.link} key={key}>\r\n                  <li className=\"rows \">\r\n                    <div id=\"icon\">{val.icon} </div>\r\n\r\n                    <div id=\"title\"> {val.title} </div>\r\n                  </li>\r\n                </a>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Auth\\UserList.tsx",["228"],"import React, { useEffect, useState, ChangeEvent } from \"react\";\r\nimport * as userService from \"../Auth/userService\";\r\nimport {User} from \"../Auth/User\" \r\nimport { toast } from \"react-toastify\";\r\nimport { FiEdit} from \"react-icons/fi\";\r\nimport { BsEyeFill,  BsTrash } from \"react-icons/bs\";\r\nimport * as rolService from \"../Role/rolService\";\r\n\r\nfunction UserList() {\r\n    const token = localStorage.getItem('loggedGreenUser')\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [load, setLoad] = useState(true);\r\n  const [rol, setRol] = useState<any>([])\r\n  const [search, setSearch] = useState(\"\");\r\n  \r\n  const loadRol = async () => {\r\n    const res:any = await rolService.getRoles();\r\n    setRol(res.data)\r\n  };\r\n  const loadUsers = async () => {\r\n    const res = await userService.getUsers();\r\n    setUsers(res.data);\r\n  };\r\n  const handleDelete = async (id: string) => {\r\n    if (window.confirm(\"¿Realmente desea eliminar este articulo?\")) {\r\n      await userService.deleteUser(id, `${token}`);\r\n      toast.error(\"Usuario Eliminado con exito\");\r\n      setLoad(!load);\r\n    }\r\n  };\r\n  const handlerInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSearch(e.target.value);\r\n    setLoad(!load);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    loadRol();\r\n    loadUsers();\r\n  }, [load]);\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\" row p-5\"\r\n        style={{\r\n          alignItems: \"center\",\r\n          alignContent: \"center\",\r\n          width: \"100%\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <div className=\"form-group col-lg-1\"></div>\r\n        <div className=\"form-group col-lg-2\">\r\n          <label className=\"col-form-label\" htmlFor=\"inputDefault\">\r\n            Buscar producto:{\" \"}\r\n          </label>\r\n        </div>\r\n        <div className=\"form-group col-lg-4\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Ingresar nombre de producto\"\r\n            id=\"inputDefault\"\r\n            onChange={handlerInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group col-lg-2\"></div>\r\n        <br />\r\n        <br />\r\n        <div className=\"card border-primary mb-3\" style={{ width: 1000 }}>\r\n          <div className=\"card-header\">Inventario</div>\r\n          <div className=\"card-body\">\r\n            <table className=\"table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Nombre</th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Dirección</th>\r\n                  <th scope=\"col\">Rol</th>\r\n                  <th scope=\"col\">... Opciones... </th>\r\n                </tr>\r\n              </thead>\r\n              {users.map((user, index) => {\r\n                if (!user.name.indexOf(search)) {\r\n                  return (\r\n                    <tbody key={index}>\r\n                      <tr>\r\n                        \r\n                        <td>{user.name+\" \"+user.lastName}</td>\r\n                        <td>{user.email}</td>\r\n                        <td>{user.address+\" \"+user.city}</td>\r\n                       \r\n                        <td>{(user.roles === rol[2])? user.roles : \"user\"}</td>\r\n                        <td>\r\n                        <button\r\n                           \r\n                            style={{ marginRight: 5 }}\r\n                            className=\"btn btn-info btn-sm\"\r\n                            onClick={() => window.location.href=`/userview/${user._id}`\r\n                            }\r\n                          >\r\n                            {\" \"}\r\n                            <BsEyeFill />\r\n                          </button>\r\n                          <button\r\n                            className=\"btn btn-warning btn-sm\"\r\n                            style={{ marginRight: 5 }}\r\n                           \r\n                          >\r\n                            {\" \"}\r\n                            <FiEdit style={{ color: \"#fff\" }} />\r\n                          </button>\r\n                          <button\r\n                            onClick={() =>\r\n                              user._id && handleDelete(user._id)\r\n                            }\r\n                            style={{ marginRight: 5 }}\r\n                            className=\"btn btn-danger btn-sm\"\r\n                          >\r\n                            {\" \"}\r\n                            <BsTrash />\r\n                          </button>\r\n                          \r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                }\r\n              })}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Auth\\Auth.tsx",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\utils\\userJson.ts",["229"],"import jwt from \"jsonwebtoken\";\r\n\r\nfunction userJson() {\r\nconst loggedUserJson = window.localStorage.getItem(\"loggedGreenUser\") || null;\r\n\r\n  const user = JSON.parse(loggedUserJson || \"\");\r\n  let decodeData, arrayUsuario, name: string, char;\r\n\r\n  if (user) {\r\n    decodeData = jwt.verify(user, \"ikhodi\");\r\n    arrayUsuario = Object.values(decodeData);\r\n    name = `${arrayUsuario[1]}`;\r\n    char = name.charAt(0).toUpperCase();\r\n  }\r\n  return arrayUsuario;\r\n}\r\n\r\nexport default userJson\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Auth\\userService.ts",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Role\\rolService.ts",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Navigation\\SideBarData.tsx",[],"C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Auth\\Register.tsx",["230","231"],"import React, {\r\n  useState,\r\n  FormEvent,\r\n  ChangeEvent,\r\n  useEffect,\r\n  useRef,\r\n} from \"react\";\r\nimport { User } from \"./User\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as userService from \"./userService\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nfunction Register(props: any) {\r\n  const { setLg } = props;\r\n  const initialState = {\r\n    name: \"\",\r\n    roles: [\"user\"],\r\n    email: \"\",\r\n    password: \"\",\r\n    repeatPassword: \"\",\r\n    lastName: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    phone: \"\",\r\n    photo: \"\",\r\n  };\r\n  const [validate, setValidate] = useState(true);\r\n  const [user, setUser] = useState<User>(initialState);\r\n  const [btn, setBtn] = useState(false);\r\n  const [codigo, setCodigo] = useState({\r\n    codeVerify: 0,\r\n  });\r\n  const [show, setShow] = useState(false);\r\n  const [random, setRandom] = useState(0);\r\n\r\n  let random2: number;\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const changeForm = async () => {\r\n    setLg(true);\r\n  };\r\n  const handlerInputChange = (\r\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>\r\n  ) => {\r\n\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n  const handlerInputChange2 = (\r\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>\r\n  ) => {\r\n    setCodigo({ ...codigo, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handlSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (\r\n      user.name &&\r\n      user.lastName &&\r\n      user.email &&\r\n      user.city &&\r\n      user.address &&\r\n      user.phone\r\n    ) {\r\n      random2 = Math.floor(Math.random() * (9999 - 1000) + 1000);\r\n      setRandom(random2);\r\n      await userService.sendEmail(random2, user);\r\n      handleShow();\r\n    } else {\r\n      toast.error(\"Todos los campos son requeridos\");\r\n    }\r\n  };\r\n  const saveUser = async () => {\r\n    let code: number = codigo.codeVerify;\r\n    if (`${code}` === `${random}`) {\r\n      const sessionData = await userService.createUser(user);\r\n      if (sessionData.status === 200) {\r\n        const token: any = sessionData.data;\r\n        window.localStorage.setItem(\"loggedGreenUser\", JSON.stringify(token));\r\n        window.location.href = \"/activosform\";\r\n        toast.success(\"Bienvenido\");\r\n      } else {\r\n        return toast.error(\r\n          \"Ocurrio un problema mientras se realizaba la petición\"\r\n        );\r\n      }\r\n    } else {\r\n      return toast.error(\"Codigo incorrecto, realice de nuevo el proceso\");\r\n    }\r\n    toast.success(\"Usuario creado satisfactoriamente\");\r\n  };\r\n  //console.log(inputRef);\r\n  const passEqual = async () => {\r\n    if (user.password === user.repeatPassword) {\r\n      setValidate(true);\r\n      setBtn(true);\r\n    } else {\r\n      setBtn(false);\r\n      setValidate(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    passEqual();\r\n  }, [user.password]);\r\n  return (\r\n    <div\r\n      className=\" card form-group col-lg-12\"\r\n      style={{ paddingTop: \"2%\", paddingBottom: \"2%\" }}\r\n    >\r\n      <div className=\" card form-group col-lg-12\">\r\n        <form onSubmit={handlSubmit}>\r\n          <h3>Registro</h3>\r\n\r\n          <div className=\"form-group row\">\r\n            <div className=\"col-lg-6\">\r\n              <label>Nombre </label>\r\n              <input\r\n                name=\"name\"\r\n                placeholder=\"Nombre\"\r\n                className=\"form-control\"\r\n                onChange={handlerInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <label>Apellidos </label>\r\n              <input\r\n                placeholder=\"Apellidos\"\r\n                name=\"lastName\"\r\n                className=\"form-control\"\r\n                onChange={handlerInputChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <div className=\"col-lg-6\">\r\n              <label>Email </label>\r\n              <input\r\n                type=\"email\"\r\n                placeholder=\"name@green.com\"\r\n                name=\"email\"\r\n                className=\"form-control\"\r\n                onChange={handlerInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <label>Telefono </label>\r\n              <input\r\n                placeholder=\"Numero de telefono\"\r\n                name=\"phone\"\r\n                className=\"form-control\"\r\n                onChange={handlerInputChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <div className=\"col-lg-6\">\r\n              <label>Ciudad de residencia </label>\r\n              <input\r\n                name=\"city\"\r\n                placeholder=\"Ciudad de residencia\"\r\n                className=\"form-control\"\r\n                onChange={handlerInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <label>Dirección </label>\r\n              <input\r\n                placeholder=\"Direccion\"\r\n                name=\"address\"\r\n                className=\"form-control\"\r\n                onChange={handlerInputChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <div className=\"col-lg-6\">\r\n              <label>Contraseña </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"repeatPassword\"\r\n                placeholder=\"Contraseña\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={handlerInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <label>Repetir contraseña </label>\r\n              <input\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                placeholder=\"Repetir Contraseña\"\r\n                type=\"password\"\r\n                id=\"repeatPassword\"\r\n                onChange={handlerInputChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          {user.password ? (\r\n            <div>\r\n              {validate ? (\r\n                <div>\r\n                  <p style={{ color: \"green\" }}>Coinciden las contraseñas</p>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <p style={{ color: \"red\" }}>No coinciden las contraseñas</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {btn &&\r\n          user.name &&\r\n          user.lastName &&\r\n          user.email &&\r\n          user.city &&\r\n          user.address &&\r\n          user.phone &&\r\n          user.password ? (\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n              Registrarse\r\n            </button>\r\n          ) : (\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled\r\n            >\r\n              Registrarse\r\n            </button>\r\n          )}\r\n\r\n          <div style={{ justifyContent: \"flex-end\" }}>\r\n            <div>\r\n              <button className=\"btn btn-link\" onClick={changeForm}>\r\n                Already have an account? Sign in\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Verificación de Cuenta</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            Por favor digita el correo electronico que digitaste para validar\r\n            que es tu email.\r\n            <input\r\n              placeholder=\"Codigo de verificación \"\r\n              type=\"number\"\r\n              name=\"codeVerify\"\r\n              onChange={handlerInputChange2}\r\n            />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Cerrar\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={saveUser}>\r\n              Confirmar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Auth\\Login.tsx",["232"],"import { useState, FormEvent, ChangeEvent } from \"react\";\r\nimport { User } from \"./User\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as userService from \"./userService\";\r\nimport { IoEye, IoEyeOff } from \"react-icons/io5\";\r\nimport Principal from \"./Principal\";\r\n\r\nfunction Login(props: any) {\r\n  const { setLg } = props;\r\n  const initialState = {\r\n    name: \"\",\r\n    rol: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    repeatPassword: \"\",\r\n    lastName: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    phone: \"\",\r\n    photo: \"\",\r\n  };\r\n\r\n  const [user, setUser] = useState<User>(initialState);\r\n  const [btn, setBtn] = useState(true);\r\n  const changeForm = async () => {\r\n    setLg(false);\r\n  };\r\n  const handlerInputChange = (\r\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>\r\n  ) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n  const changeIcon = async () => {\r\n    setBtn(!btn);\r\n  };\r\n  const handlSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (user.email && user.password) {\r\n      const sessionData = await userService.loginUser(\r\n        user.email,\r\n        user.password\r\n      );\r\n      if (sessionData.status === 204) {\r\n        toast.error(\"Credenciales invalidas, verifique usuario o contraseña\");\r\n      } else {\r\n        if (sessionData.status === 200) {\r\n          const token: any = sessionData.data;\r\n          window.localStorage.setItem(\"loggedGreenUser\", JSON.stringify(token));\r\n          window.location.href = \"/\";\r\n          toast.success(\"Bienvenido\");\r\n        } else {\r\n          toast.error(\"Credenciales invalidas, verifique usuario o contraseña\");\r\n        }\r\n      }\r\n    } else {\r\n      toast.error(\"Todos los campos son requeridos :(\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\" card\"\r\n      style={{ paddingTop: \"7%\", paddingBottom: \"7%\" }}\r\n    >\r\n      <div className=\" card form-group col-lg-12\">\r\n        <form onSubmit={handlSubmit}>\r\n          <h3>Inicio de sesión</h3>\r\n          <div className=\"form-group\">\r\n            <label>Email </label>\r\n            <div className=\"form-group row col-lg-12\">\r\n              <input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"Ingresa el email\"\r\n                onChange={handlerInputChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Contraseña</label>\r\n            <div className=\"form-group row col-lg-12\">\r\n              <input\r\n                name=\"password\"\r\n                type={btn ? \"password\" : \"text\"}\r\n                className=\"form-control col-lg-11\"\r\n                placeholder=\"Digita tu contraseña\"\r\n                onChange={handlerInputChange}\r\n              />\r\n              {btn ? (\r\n                <IoEye\r\n                  type=\"button\"\r\n                  onClick={changeIcon}\r\n                  className=\"form-control col-lg-1\"\r\n                />\r\n              ) : (\r\n                <IoEyeOff\r\n                  type=\"button\"\r\n                  onClick={changeIcon}\r\n                  className=\"form-control col-lg-1\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"custom-control custom-checkbox\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"custom-control-input\"\r\n                id=\"customCheck1\"\r\n              />\r\n              <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n                Remember me\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n            Iniciar sesión\r\n          </button>\r\n          <p className=\"forgot-password text-right\">\r\n            Olvidaste tu <a href=\"/RememberPassword\">contraseña?</a>\r\n          </p>\r\n        </form>\r\n\r\n        <button className=\"btn btn-link\" onClick={changeForm}>\r\n          Registrarse\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Auth\\Principal.tsx",["233"],"\r\nimport Logo from '../../images/176244152_139134654884833_6416900934015126848_n.jpg'\r\n\r\nfunction Principal() {\r\n          \r\n          return (\r\n            <div\r\n                className=\" form-group row col-lg-12\"\r\n              >\r\n                <div\r\n                  className=\" form-group col-lg-12\"\r\n                  style={{\r\n                    height: window.screen.height-150,\r\n                    backgroundColor: \"black\"\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={Logo}\r\n                    style={{\r\n                      backgroundSize: \"cover\",\r\n                      height: \"100%\",\r\n                      width: \"100%\",\r\n                    }}\r\n                  />\r\n                </div>       \r\n              </div>\r\n          )\r\n}\r\n\r\nexport default Principal\r\n","C:\\Users\\Carlos\\MERN-Frontend\\src\\config.ts",["234"],"export default{\r\n    //API_HOST: 'https://api-plantilla1.herokuapp.com',\r\n    API_HOST: 'http://localhost:4000',\r\n    \r\n}","C:\\Users\\Carlos\\MERN-Frontend\\src\\components\\Home\\UserView.tsx",["235","236"],"import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { User } from \"../Auth/User\";\r\nimport * as userService from \"../Auth/userService\";\r\nimport * as rolService from \"../Role/rolService\";\r\nfunction UserView() {\r\n  interface Params {\r\n    id?: any;\r\n  }\r\n  const params = useParams<Params>();\r\n  const [user, setUser] = useState<User>();\r\n  const [rol, setRol] = useState(\"\")\r\n  const loadUser = async () => {\r\n    const res = await userService.getUser(params.id);\r\n    setUser(res.data);\r\n    loadRol(res.data.roles);\r\n  };\r\n  const loadRol = async (id:any) => {\r\n    const res:any = await rolService.getRole(id);\r\n    setRol(res.data)\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"jumbotron\" style={{ textAlign: \"center\" }}>\r\n      <div>\r\n        <img\r\n          src=\"https://image.shutterstock.com/image-photo/smiling-cat-business-suit-260nw-219244810.jpg\"\r\n          style={{\r\n            width: 180,\r\n            height: 180,\r\n            borderRadius: 100,\r\n            border: 25,\r\n            borderColor: \"#000\",\r\n          }}\r\n        />\r\n        <h2 className=\"media-heading\">\r\n          {user?.name} {user?.lastName}\r\n        </h2>\r\n      </div>\r\n      <hr className=\"my-4\" />\r\n      <h3>Usuario teletrabajo Green</h3>\r\n      <div style={{textAlign: \"center\", marginInline:\"25%\"}}>\r\n        <div className=\"form-group row\">\r\n          <h4>Roles: </h4>\r\n          <h4>{rol}</h4>\r\n        </div>\r\n        <div className=\"form-group row\" >\r\n          <h4>Telefono: </h4>\r\n          <h4>{user?.phone}</h4>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <h4>Dirección: </h4>\r\n          <h4>\r\n            {user?.address} {user?.city}\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserView;\r\n",{"ruleId":"237","severity":1,"message":"238","line":4,"column":25,"nodeType":"239","messageId":"240","endLine":4,"endColumn":30},{"ruleId":"237","severity":1,"message":"241","line":4,"column":32,"nodeType":"239","messageId":"240","endLine":4,"endColumn":38},{"ruleId":"237","severity":1,"message":"242","line":6,"column":10,"nodeType":"239","messageId":"240","endLine":6,"endColumn":16},{"ruleId":"237","severity":1,"message":"243","line":7,"column":10,"nodeType":"239","messageId":"240","endLine":7,"endColumn":19},{"ruleId":"237","severity":1,"message":"244","line":12,"column":8,"nodeType":"239","messageId":"240","endLine":12,"endColumn":14},{"ruleId":"237","severity":1,"message":"245","line":13,"column":8,"nodeType":"239","messageId":"240","endLine":13,"endColumn":14},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","severity":1,"message":"251","line":7,"column":13,"nodeType":"252","endLine":7,"endColumn":56},{"ruleId":"253","severity":1,"message":"254","line":82,"column":40,"nodeType":"255","messageId":"256","endLine":82,"endColumn":42},{"ruleId":"257","severity":1,"message":"258","line":29,"column":6,"nodeType":"259","endLine":29,"endColumn":8,"suggestions":"260"},{"ruleId":"250","severity":1,"message":"251","line":49,"column":15,"nodeType":"252","endLine":49,"endColumn":56},{"ruleId":"253","severity":1,"message":"254","line":92,"column":42,"nodeType":"255","messageId":"256","endLine":92,"endColumn":44},{"ruleId":"257","severity":1,"message":"258","line":29,"column":6,"nodeType":"259","endLine":29,"endColumn":8,"suggestions":"261"},{"ruleId":"250","severity":1,"message":"251","line":48,"column":15,"nodeType":"252","endLine":48,"endColumn":56},{"ruleId":"253","severity":1,"message":"254","line":91,"column":40,"nodeType":"255","messageId":"256","endLine":91,"endColumn":42},{"ruleId":"253","severity":1,"message":"254","line":69,"column":46,"nodeType":"255","messageId":"256","endLine":69,"endColumn":48},{"ruleId":"253","severity":1,"message":"254","line":69,"column":45,"nodeType":"255","messageId":"256","endLine":69,"endColumn":47},{"ruleId":"257","severity":1,"message":"262","line":155,"column":6,"nodeType":"259","endLine":155,"endColumn":15,"suggestions":"263"},{"ruleId":"257","severity":1,"message":"264","line":159,"column":6,"nodeType":"259","endLine":159,"endColumn":8,"suggestions":"265"},{"ruleId":"266","severity":1,"message":"267","line":336,"column":27,"nodeType":"268","messageId":"269","endLine":342,"endColumn":28},{"ruleId":"257","severity":1,"message":"270","line":104,"column":8,"nodeType":"259","endLine":104,"endColumn":38,"suggestions":"271"},{"ruleId":"257","severity":1,"message":"262","line":164,"column":6,"nodeType":"259","endLine":164,"endColumn":15,"suggestions":"272"},{"ruleId":"257","severity":1,"message":"273","line":168,"column":6,"nodeType":"259","endLine":168,"endColumn":8,"suggestions":"274"},{"ruleId":"266","severity":1,"message":"267","line":353,"column":27,"nodeType":"268","messageId":"269","endLine":359,"endColumn":28},{"ruleId":"253","severity":1,"message":"254","line":79,"column":42,"nodeType":"255","messageId":"256","endLine":79,"endColumn":44},{"ruleId":"257","severity":1,"message":"275","line":109,"column":6,"nodeType":"259","endLine":109,"endColumn":62,"suggestions":"276"},{"ruleId":"250","severity":1,"message":"251","line":129,"column":15,"nodeType":"252","endLine":129,"endColumn":58},{"ruleId":"250","severity":1,"message":"251","line":23,"column":11,"nodeType":"252","endLine":30,"endColumn":13},{"ruleId":"253","severity":1,"message":"254","line":83,"column":40,"nodeType":"255","messageId":"256","endLine":83,"endColumn":42},{"ruleId":"237","severity":1,"message":"277","line":13,"column":5,"nodeType":"239","messageId":"240","endLine":13,"endColumn":9},{"ruleId":"237","severity":1,"message":"278","line":6,"column":3,"nodeType":"239","messageId":"240","endLine":6,"endColumn":9},{"ruleId":"257","severity":1,"message":"279","line":104,"column":6,"nodeType":"259","endLine":104,"endColumn":21,"suggestions":"280"},{"ruleId":"237","severity":1,"message":"281","line":6,"column":8,"nodeType":"239","messageId":"240","endLine":6,"endColumn":17},{"ruleId":"250","severity":1,"message":"251","line":17,"column":19,"nodeType":"252","endLine":24,"endColumn":21},{"ruleId":"282","severity":1,"message":"283","line":1,"column":1,"nodeType":"284","endLine":5,"endColumn":2},{"ruleId":"257","severity":1,"message":"285","line":25,"column":6,"nodeType":"259","endLine":25,"endColumn":8,"suggestions":"286"},{"ruleId":"250","severity":1,"message":"251","line":30,"column":9,"nodeType":"252","endLine":39,"endColumn":11},"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Prueba' is defined but never used.","'VideoForm' is defined but never used.","'Navbar' is defined but never used.","'Footer' is defined but never used.","no-native-reassign",["287"],"no-negated-in-lhs",["288"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadItems2'. Either include it or remove the dependency array.","ArrayExpression",["289"],["290"],"React Hook useEffect has a missing dependency: 'person'. Either include it or remove the dependency array. You can also do a functional update 'setPerson(p => ...)' if you only need 'person' in the 'setPerson' call.",["291"],"React Hook useEffect has a missing dependency: 'loadEntryD'. Either include it or remove the dependency array.",["292"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'totalDatos'. Either include it or remove the dependency array.",["293"],["294"],"React Hook useEffect has a missing dependency: 'loadSalesD'. Either include it or remove the dependency array.",["295"],"React Hook useEffect has missing dependencies: 'deposits', 'entries', 'expenses', 'it', 'sales', and 'utilities'. Either include them or remove the dependency array.",["296"],"'char' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'passEqual'. Either include it or remove the dependency array.",["297"],"'Principal' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.",["298"],"no-global-assign","no-unsafe-negation",{"desc":"299","fix":"300"},{"desc":"299","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"302","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},"Update the dependencies array to be: [loadItems2]",{"range":"317","text":"318"},{"range":"319","text":"318"},"Update the dependencies array to be: [article, person]",{"range":"320","text":"321"},"Update the dependencies array to be: [loadEntryD]",{"range":"322","text":"323"},"Update the dependencies array to be: [deposits, salesDetail, sales, totalDatos]",{"range":"324","text":"325"},{"range":"326","text":"321"},"Update the dependencies array to be: [loadSalesD]",{"range":"327","text":"328"},"Update the dependencies array to be: [saleDetail, deposit, sale, expense, entryDetail, items, sales, it, deposits, utilities, expenses, entries]",{"range":"329","text":"330"},"Update the dependencies array to be: [passEqual, user.password]",{"range":"331","text":"332"},"Update the dependencies array to be: [loadUser]",{"range":"333","text":"334"},[898,900],"[loadItems2]",[872,874],[4733,4742],"[article, person]",[4808,4810],"[loadEntryD]",[3388,3418],"[deposits, salesDetail, sales, totalDatos]",[4812,4821],[4887,4889],"[loadSalesD]",[3635,3691],"[saleDetail, deposit, sale, expense, entryDetail, items, sales, it, deposits, utilities, expenses, entries]",[2905,2920],"[passEqual, user.password]",[734,736],"[loadUser]"]